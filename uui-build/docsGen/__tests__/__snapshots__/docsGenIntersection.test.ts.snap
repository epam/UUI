// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`docsGen:intersection should convert intersection 1`] = `
{
 "docsGenTypes": {
  "test/test.tsx:TIntersection": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TIntersection",
     "nameFull": "TIntersection"
    },
    "src": "test/test.tsx",
    "exported": true
   },
   "details": {
    "kind": 264,
    "typeValue": {
     "raw": "TIntersection",
     "print": [
      "type TIntersection = TIntersectionMemberA & IIntersectionMemberB;"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "a1",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:TIntersectionMemberA",
      "required": true
     },
     {
      "uid": 2,
      "name": "a2",
      "typeValue": {
       "raw": "string"
      },
      "editor": {
       "type": "string"
      },
      "from": "test/test.tsx:TIntersectionMemberA",
      "required": true
     },
     {
      "uid": 3,
      "name": "b1",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:IIntersectionMemberB",
      "required": true
     },
     {
      "uid": 4,
      "name": "b2",
      "typeValue": {
       "raw": "string"
      },
      "editor": {
       "type": "string"
      },
      "from": "test/test.tsx:IIntersectionMemberB",
      "required": true
     }
    ],
    "propsFromUnion": false
   }
  },
  "test/test.tsx:IIntersectionMemberB": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "IIntersectionMemberB",
     "nameFull": "IIntersectionMemberB"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  },
  "test/test.tsx:TIntersectionMemberA": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TIntersectionMemberA",
     "nameFull": "TIntersectionMemberA"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  }
 }
}
`;

exports[`docsGen:intersection should convert top level type with Omit 1`] = `
{
 "docsGenTypes": {
  "test/test.tsx:TIntersection": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TIntersection",
     "nameFull": "TIntersection"
    },
    "src": "test/test.tsx",
    "exported": true
   },
   "details": {
    "kind": 264,
    "typeValue": {
     "raw": "TIntersection",
     "print": [
      "type TIntersection = Omit<TFirst, 'f2'>;"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "f1",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:TFirst",
      "required": true
     }
    ],
    "propsFromUnion": false
   }
  },
  "test/test.tsx:TFirst": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TFirst",
     "nameFull": "TFirst"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  }
 }
}
`;

exports[`docsGen:intersection should convert type intersection with Omit 1`] = `
{
 "docsGenTypes": {
  "test/test.tsx:TIntersection": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TIntersection",
     "nameFull": "TIntersection"
    },
    "src": "test/test.tsx",
    "exported": true
   },
   "details": {
    "kind": 264,
    "typeValue": {
     "raw": "TIntersection",
     "print": [
      "type TIntersection = Omit<TFirst, 'f2'> & TSecond;"
     ]
    },
    "props": [
     {
      "uid": 1,
      "name": "f1",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:IFirstPart1",
      "required": true
     },
     {
      "uid": 2,
      "name": "f3",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:IFirstPart2",
      "required": true
     },
     {
      "uid": 3,
      "name": "f4",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:IFirstPart2",
      "required": true
     },
     {
      "uid": 4,
      "name": "s1",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:TSecond",
      "required": true
     },
     {
      "uid": 5,
      "name": "s2",
      "typeValue": {
       "raw": "number"
      },
      "editor": {
       "type": "number"
      },
      "from": "test/test.tsx:TSecond",
      "required": true
     }
    ],
    "propsFromUnion": false
   }
  },
  "test/test.tsx:IFirstPart1": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "IFirstPart1",
     "nameFull": "IFirstPart1"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  },
  "test/test.tsx:IFirstPart2": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "IFirstPart2",
     "nameFull": "IFirstPart2"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  },
  "test/test.tsx:TSecond": {
   "summary": {
    "module": "test/test.tsx",
    "typeName": {
     "name": "TSecond",
     "nameFull": "TSecond"
    },
    "src": "test/test.tsx",
    "exported": false
   }
  }
 }
}
`;
