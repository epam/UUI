# Reusable workflow

name: base

# Controls when the action will run.
on:
  # Run only when called from another workflow
  workflow_call:
    inputs:
      values-file:
        required: true
        type: string
      image-name:
        required: true
        type: string
      git-version-mode:
        required: true
        type: string
    secrets:
      ARTIFACTORY_REGISTRY_URL:
        required: true
      ARTIFACTORY_AUTH2_USER:
        required: true
      WFI_PROVIDER:
        required: true
      WFI_SA:
        required: true
      BASE_HELMCHART_NAME:
        required: true
      BASE_HELMCHART_VERSION:
        required: true
      PROJECT_ID:
        required: true
      APP_NAME_BASE:
        required: true

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      VALUES_FILE: ${{ inputs.values-file }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
            node-version: '18.x'
            cache: 'yarn'
            cache-dependency-path: |
                **/yarn.lock
      - name: build
        run: |
          yarn
          yarn generate-components-api
          yarn build
          cd server && yarn

      - name: test
        run: yarn test-ci

      - name: eslint
        run: yarn eslint

      - name: stylelint
        run: yarn stylelint

      - name: Authenticate to Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: access_token
          project_id: ${{ secrets.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WFI_PROVIDER }}
          service_account: ${{ secrets.WFI_SA }}

      - name: Login to artifactory
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACTORY_REGISTRY_URL }}
          username: ${{ secrets.ARTIFACTORY_AUTH2_USER }}
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.ARTIFACTORY_REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/apps-docker-repo/${{ inputs.image-name }}
          # generate Docker tags based on the following events/attributes
          # This is our main tag for image in form sha-XXXXXX which we will use in helm values file (see "Preparation and Helm chart packaging" job)
          tags: |
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          # Image will be tagged with all tags from "Docker meta" step
          tags: ${{ steps.meta.outputs.tags }}

      # install Gitversion to obtain semver version
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.8.3'
      # need to updated
      - name: Version determination
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: ${{ inputs.git-version-mode }}
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.0

      - name: Preparation and Helm chart packaging
        run: |
          echo ${{ steps.auth.outputs.access_token }} | helm registry login ${{ secrets.ARTIFACTORY_REGISTRY_URL }} --username ${{ secrets.ARTIFACTORY_AUTH2_USER }} --password-stdin
          mkdir helmchart && cd ./helmchart # helm cannot untar file to the repo with the same name as a package. To avoid error we create temp folder
          helm pull oci://${{ secrets.ARTIFACTORY_REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/apps-docker-repo/helm/${{ secrets.BASE_HELMCHART_NAME }} --version ${{ secrets.BASE_HELMCHART_VERSION }} --untar
          echo "[INFO] Replace Docker image tag in helm chart..."
          sed -i -e "s/tag: latest/tag: sha-${GITVERSION_SHORTSHA}/g" ${{ secrets.BASE_HELMCHART_NAME }}/${VALUES_FILE}

      - name: Packaging and Uploading Helm Chart
        run: |
          cd ./helmchart
          # workaround to avoid Helm chart versioning issues
          current_timestamp=$(date +%s)
          export helm_tag="$GITVERSION_MAJOR.$GITVERSION_MINOR.$current_timestamp"
          echo "[INFO] ${helm_tag}..."

          echo "[INFO] Replace Helm Chart package version..."
          sed -i -e "s/version: ${{ secrets.BASE_HELMCHART_VERSION }}/version: ${helm_tag}/g" ${{ secrets.BASE_HELMCHART_NAME }}/Chart.yaml
          echo "[INFO] Changing Helm Chart package name..."
          sed -i -e "s/name: ${{ secrets.BASE_HELMCHART_NAME }}/name: ${{ secrets.APP_NAME_BASE }}/g" ${{ secrets.BASE_HELMCHART_NAME }}/Chart.yaml
          helm package ${{ secrets.BASE_HELMCHART_NAME }}
          helm push ${{ secrets.APP_NAME_BASE }}-${helm_tag}.tgz oci://${{ secrets.ARTIFACTORY_REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/apps-docker-repo/helm