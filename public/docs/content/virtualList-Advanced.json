[
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "In case the standard "
      },
      {
        "text": "VirtualList",
        "uui-richTextEditor-code": true
      },
      {
        "text": " doesn't fit you, we provide a separate "
      },
      {
        "text": "useVirtualList",
        "uui-richTextEditor-code": true
      },
      {
        "text": "  ",
        "uui-richTextEditor-italic": true
      },
      {
        "text": "hook in case you would like to build something your own based on it."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "\n"
      },
      {
        "text": "useVirtualList",
        "uui-richTextEditor-code": true
      },
      {
        "text": " hook returns the following api:"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "data": {},
        "type": "unordered-list",
        "children": [
          {
            "data": {},
            "type": "list-item",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "scrollContainerRef",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - ref to scroll container. This should be a DOM Element with scrollbars inside. We'll use this ref to calculate the estimated height of the list precisely."
                  }
                ]
              }
            ]
          },
          {
            "data": {},
            "type": "list-item",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "listContainerRef",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - ref to the list wrapper that is going to be virtualized."
                  }
                ]
              }
            ]
          },
          {
            "data": {},
            "type": "list-item",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "estimatedHeight",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - to measure the approximate height of the list."
                  }
                ]
              }
            ]
          },
          {
            "data": {},
            "type": "list-item",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "offsetY",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - must be provided in case listContainer and scrollContainer are different."
                  }
                ]
              }
            ]
          },
          {
            "data": {},
            "type": "list-item",
            "children": [
              {
                "data": {},
                "type": "list-item-child",
                "children": [
                  {
                    "text": "handleScroll",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - must be applied to the container as a scroll event handler."
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "paragraph",
        "children": [
          {
            "text": "In this example, we show how to make a virtualized list when scrollContainer is a whole page with a header(which dont't need to be virtualized), with a list of items inside."
          }
        ]
      }
    ]
  }
]