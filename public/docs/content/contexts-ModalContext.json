{
  "object": "value",
  "document": {
    "object": "document",
    "data": {},
    "nodes": [
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "Use ",
            "marks": []
          },
          {
            "object": "text",
            "text": "svc.uuiModals.show(props: IModal<T> => {...}) ",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " method to trigger modal opening. \nPay attention that you spread ",
            "marks": []
          },
          {
            "object": "text",
            "text": "props",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " parameter to your component.",
            "marks": []
          }
        ]
      },
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "To close modal use ",
            "marks": []
          },
          {
            "object": "text",
            "text": "props.success(data)",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " - to resolve promise or ",
            "marks": []
          },
          {
            "object": "text",
            "text": "props.abort()",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " - to reject promise. So you can get our data in '",
            "marks": []
          },
          {
            "object": "text",
            "text": "than",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-underlined",
                "data": {}
              },
              {
                "object": "mark",
                "type": "uui-richTextEditor-italic",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": "' or '",
            "marks": []
          },
          {
            "object": "text",
            "text": "catch",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-underlined",
                "data": {}
              },
              {
                "object": "mark",
                "type": "uui-richTextEditor-italic",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": "' handler after ",
            "marks": []
          },
          {
            "object": "text",
            "text": "svc.uuiModals.show",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " promise resolving.",
            "marks": []
          }
        ]
      }
    ]
  }
}